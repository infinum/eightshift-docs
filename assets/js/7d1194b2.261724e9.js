"use strict";(self.webpackChunk_eightshift_docs=self.webpackChunk_eightshift_docs||[]).push([[51459],{42028:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var r=t(74848),i=t(28453);const o={id:"config",title:"Project Config"},s=void 0,c={id:"legacy/v4/guides/config",title:"Project Config",description:"docs-source",source:"@site/docs/legacy/v4/guides/config.md",sourceDirName:"legacy/v4/guides",slug:"/legacy/v4/guides/config",permalink:"/docs/legacy/v4/guides/config",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"config",title:"Project Config"},sidebar:"docs",previous:{title:"Dependency injection container",permalink:"/docs/legacy/v4/guides/di-container"},next:{title:"Manifest",permalink:"/docs/legacy/v4/guides/manifest"}},l={},d=[{value:"get_project_name()",id:"get_project_name",level:2},{value:"get_project_version()",id:"get_project_version",level:2},{value:"get_project_prefix()",id:"get_project_prefix",level:2},{value:"get_project_env()",id:"get_project_env",level:2},{value:"get_project_routes_namespace()",id:"get_project_routes_namespace",level:2},{value:"get_project_routes_version()",id:"get_project_routes_version",level:2},{value:"get_project_primary_color()",id:"get_project_primary_color",level:2},{value:"get_project_path()",id:"get_project_path",level:2},{value:"get_config()",id:"get_config",level:2}];function a(e){const n={a:"a",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/infinum/eightshift-boilerplate/tree/v4.0.0/src/class-config.php",children:(0,r.jsx)(n.img,{src:"https://img.shields.io/badge/source-eigthshift--boilerplate-red?style=for-the-badge&logo=wordpress&labelColor=2a2a2a",alt:"docs-source"})})}),"\n",(0,r.jsxs)(n.p,{children:["Project config is located in ",(0,r.jsx)(n.code,{children:"src/class-config.php"}),", and it extends ",(0,r.jsx)(n.code,{children:"Eightshift_Libs\\Core\\Config"})," class from the lib."]}),"\n",(0,r.jsx)(n.p,{children:"This class is used to define all the important methods for your project:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"get_project_name()"}),"\n",(0,r.jsx)(n.li,{children:"get_project_version()"}),"\n",(0,r.jsx)(n.li,{children:"get_project_prefix()"}),"\n",(0,r.jsx)(n.li,{children:"get_project_env()"}),"\n",(0,r.jsx)(n.li,{children:"get_project_routes_namespace()"}),"\n",(0,r.jsx)(n.li,{children:"get_project_routes_version()"}),"\n",(0,r.jsx)(n.li,{children:"get_project_primary_color()"}),"\n",(0,r.jsx)(n.li,{children:"get_project_path()"}),"\n",(0,r.jsx)(n.li,{children:"get_config()"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Some methods are mandatory and are defined in ",(0,r.jsx)(n.a,{href:"https://github.com/infinum/eightshift-libs/tree/v2.0.0/src/interface-config-data.php",children:"config interface"})," the rest are provided inside the project."]}),"\n",(0,r.jsx)(n.h2,{id:"get_project_name",children:"get_project_name()"}),"\n",(0,r.jsx)(n.p,{children:"Type: Mandatory"}),"\n",(0,r.jsx)(n.p,{children:"Generally used for naming assets handlers, languages, etc."}),"\n",(0,r.jsx)(n.h2,{id:"get_project_version",children:"get_project_version()"}),"\n",(0,r.jsx)(n.p,{children:"Type: Mandatory"}),"\n",(0,r.jsx)(n.p,{children:"Generally used for versioning asset handlers while enqueueing them."}),"\n",(0,r.jsx)(n.h2,{id:"get_project_prefix",children:"get_project_prefix()"}),"\n",(0,r.jsx)(n.p,{children:"Type: Mandatory"}),"\n",(0,r.jsx)(n.p,{children:"The WordPress filters live in a global namespace, so we need to prefix them to avoid naming collisions."}),"\n",(0,r.jsx)(n.h2,{id:"get_project_env",children:"get_project_env()"}),"\n",(0,r.jsx)(n.p,{children:"Type: Optional but recommended"}),"\n",(0,r.jsx)(n.p,{children:"Returns the project environment variable descriptor."}),"\n",(0,r.jsx)(n.p,{children:"Used for defining global settings depending on the environment of the project. It can be one of, but not limited to, develop, staging, production."}),"\n",(0,r.jsxs)(n.p,{children:["Defaults to 'develop' (as to not cache manifest in transient) if not otherwise defined in ",(0,r.jsx)(n.code,{children:"wp-config.php"})]}),"\n",(0,r.jsx)(n.h2,{id:"get_project_routes_namespace",children:"get_project_routes_namespace()"}),"\n",(0,r.jsx)(n.p,{children:"Type: Optional"}),"\n",(0,r.jsx)(n.p,{children:"Used for namespacing project's REST-API routes and fields. Only required if you are creating a custom REST route or field."}),"\n",(0,r.jsx)(n.h2,{id:"get_project_routes_version",children:"get_project_routes_version()"}),"\n",(0,r.jsx)(n.p,{children:"Type: Optional"}),"\n",(0,r.jsx)(n.p,{children:"Used for versioning projects REST-API routes and fields. Only required if you are creating a custom REST route or field."}),"\n",(0,r.jsx)(n.h2,{id:"get_project_primary_color",children:"get_project_primary_color()"}),"\n",(0,r.jsx)(n.p,{children:"Type: Optional"}),"\n",(0,r.jsxs)(n.p,{children:["Used for styling the mobile browser color and splash screens. Check ",(0,r.jsx)(n.code,{children:"head.php"})," for more details."]}),"\n",(0,r.jsx)(n.h2,{id:"get_project_path",children:"get_project_path()"}),"\n",(0,r.jsx)(n.p,{children:"Type: Mandatory"}),"\n",(0,r.jsx)(n.p,{children:"Returns project absolute path."}),"\n",(0,r.jsxs)(n.p,{children:["If used in a theme, use ",(0,r.jsx)(n.code,{children:"get_template_directory()"})," and in case it's used in a plugin, use ",(0,r.jsx)(n.code,{children:"__DIR__"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"get_config",children:"get_config()"}),"\n",(0,r.jsx)(n.p,{children:"Type: Mandatory"}),"\n",(0,r.jsx)(n.p,{children:"The method that returns every string prefixed with project prefix based on project type."}),"\n",(0,r.jsxs)(n.p,{children:['It converts all spaces and "_" with "-", also it converts all characters to lowercase. Also, it appends the project prefix defined in the ',(0,r.jsx)(n.code,{children:"class-config.php"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Example 1:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"Config::get_config( 'custom_filter_name' );\n\nOutput:\neb-custom-filter-name\n"})}),"\n",(0,r.jsx)(n.p,{children:"Example 2:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"Config::get_config( 'custom-filter-name' );\n\nOutput:\neb-custom-filter-name\n"})}),"\n",(0,r.jsx)(n.p,{children:"Example 3:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"Config::get_config( 'custom filter name' );\n\nOutput:\neb-custom-filter-name\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var r=t(96540);const i={},o=r.createContext(i);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);