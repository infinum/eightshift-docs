"use strict";(self.webpackChunk_eightshift_docs=self.webpackChunk_eightshift_docs||[]).push([[6438],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,h=u["".concat(s,".").concat(d)]||u[d]||m[d]||r;return n?o.createElement(h,i(i({ref:t},c),{},{components:n})):o.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},83649:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var o=n(87462),a=n(63366),r=(n(67294),n(3905)),i=["components"],l={id:"wp-cli",title:"WP-CLI"},s=void 0,p={unversionedId:"basics/wp-cli",id:"basics/wp-cli",title:"WP-CLI",description:"docs-source",source:"@site/docs/basics/wp-cli.md",sourceDirName:"basics",slug:"/basics/wp-cli",permalink:"/docs/basics/wp-cli",draft:!1,tags:[],version:"current",frontMatter:{id:"wp-cli",title:"WP-CLI"},sidebar:"docs",previous:{title:"Basics",permalink:"/docs/basics/basics-intro"},next:{title:"Architecture concepts",permalink:"/docs/basics/architecture-concepts"}},c={},u=[{value:"How it works",id:"how-it-works",level:2},{value:"Options and commands",id:"options-and-commands",level:2},{value:"Commands",id:"commands",level:3},{value:"Running commands in multisite",id:"running-commands-in-multisite",level:2}],m={toc:u},d="wrapper";function h(e){var t=e.components,n=(0,a.Z)(e,i);return(0,r.kt)(d,(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/infinum/eightshift-libs"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/source-eightshift--libs-blue?style=for-the-badge&logo=php&labelColor=2a2a2a",alt:"docs-source"}))),(0,r.kt)("p",null,"Eightshift Development Kit provides extensive ",(0,r.kt)("a",{parentName:"p",href:"https://wp-cli.org/"},"WP-CLI")," tooling, allowing you to automate bootstrapping of common code, adding blocks from the Frontend Libs library to your projects and more using ",(0,r.kt)("inlineCode",{parentName:"p"},"wp boilerplate"),"."),(0,r.kt)("h2",{id:"how-it-works"},"How it works"),(0,r.kt)("p",null,"In your project's entry point (usually ",(0,r.kt)("inlineCode",{parentName:"p"},"functions.php"),"), you'll find something along these lines:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"/**\n * Run all WP-CLI commands.\n */\nif (\\class_exists(Cli::class)) {\n    (new Cli())->load('boilerplate');\n}\n")),(0,r.kt)("p",null,"This code loads the WP-CLI class from Eightshift Libs, which handles command registration for all of our commands. As this command registration is part of the theme/plugin code, this means that the same theme/plugin ",(0,r.kt)("strong",{parentName:"p"},"must be activated")," for ",(0,r.kt)("inlineCode",{parentName:"p"},"wp boilerplate")," to work."),(0,r.kt)("p",null,"To run the WP-CLI command and see what you can use, run this command in your terminal:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"wp boilerplate --help")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"By default, your project's WP-CLI commands run under the parent name ",(0,r.kt)("inlineCode",{parentName:"p"},"boilerplate"),", as defined above.")),(0,r.kt)("p",null,"You can change that by simply replacing the string inside the load method like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"/**\n * Run all WP-CLI commands.\n */\nif (\\class_exists(Cli::class)) {\n  (new Cli())->load('superCoolTheme');\n}\n")),(0,r.kt)("p",null,"Now, your project's WP-CLI commands are available using:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"wp superCoolTheme --help"),"."),(0,r.kt)("p",null,"This is especially handy when you have multiple Eightshift Boilerplate powered themes or plugins installed. In that case, you should change the WP-CLI parent name on each of the projects."),(0,r.kt)("h2",{id:"options-and-commands"},"Options and commands"),(0,r.kt)("p",null,"To get to know which commands are available and what do they do, run ",(0,r.kt)("inlineCode",{parentName:"p"},"wp boilerplate --help"),".\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"--help")," argument is available on all of our commands and provides a description of the command and a list of required and optional parameters for the command."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"wp boilerplate create config --help")),(0,r.kt)("h3",{id:"commands"},"Commands"),(0,r.kt)("p",null,"We use these common prefixes for commands:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"create")," - services classes that will be copied to your project."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"init")," - additional functions, methods and helpers that will be copied to your project."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"run")," - commands used to run an action directly from Eightshift Libs. They will not copy anything to your project."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"setup")," - commands that runs multiple already defined commands from the list."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"use")," - commands used for blocks and block-related stuff. They will copy various files and folders from the blocks folder to your project.")),(0,r.kt)("admonition",{title:"Tip",type:"success"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"Make WP-CLI your best friend, and your coding life will be much more comfortable, trust us."))),(0,r.kt)("p",null,"While we might go into more details about some of these commands, we won't be documenting all of them here - use the built-in manuals for more information about particular commands and to discover what's available. Don't gloss over them, as using ",(0,r.kt)("inlineCode",{parentName:"p"},"wp boilerplate")," is a particularly useful tool when building projects with Eightshift Development Kit."),(0,r.kt)("h2",{id:"running-commands-in-multisite"},"Running commands in multisite"),(0,r.kt)("p",null,"When you are running a multisite setup, you should always provide the additional ",(0,r.kt)("inlineCode",{parentName:"p"},"--url")," parameter. Otherwise, WP-CLI will always run the command on the main site."),(0,r.kt)("p",null,"Here is an example for command running on the primary site:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"wp boilerplate create config")),(0,r.kt)("p",null,"and here is an example for command running on the subsite:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"wp boilerplate create config --url='custom.domain.com'")))}h.isMDXComponent=!0}}]);