"use strict";(self.webpackChunk_eightshift_docs=self.webpackChunk_eightshift_docs||[]).push([[22086],{3905:function(e,n,t){t.d(n,{Zo:function(){return m},kt:function(){return y}});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=o.createContext({}),s=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=s(e.components);return o.createElement(c.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=s(t),d=r,y=u["".concat(c,".").concat(d)]||u[d]||p[d]||a;return t?o.createElement(y,l(l({ref:n},m),{},{components:t})):o.createElement(y,l({ref:n},m))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=d;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<a;s++)l[s]=t[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6369:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return c},default:function(){return y},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return u}});var o=t(87462),r=t(63366),a=(t(67294),t(3905)),l=["components"],i={id:"columns-taxonomy",title:"Taxonomy"},c=void 0,s={unversionedId:"legacy/v4/guides/columns-taxonomy",id:"legacy/v4/guides/columns-taxonomy",title:"Taxonomy",description:"docs-source",source:"@site/docs/legacy/v4/guides/columns-taxonomy.md",sourceDirName:"legacy/v4/guides",slug:"/legacy/v4/guides/columns-taxonomy",permalink:"/docs/legacy/v4/guides/columns-taxonomy",draft:!1,tags:[],version:"current",frontMatter:{id:"columns-taxonomy",title:"Taxonomy"},sidebar:"docs",previous:{title:"Post Type",permalink:"/docs/legacy/v4/guides/columns-post-type"},next:{title:"User",permalink:"/docs/legacy/v4/guides/columns-user"}},m={},u=[{value:"Example:",id:"example",level:2}],p={toc:u},d="wrapper";function y(e){var n=e.components,t=(0,r.Z)(e,l);return(0,a.kt)(d,(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/infinum/eightshift-libs/tree/v2.0.0/src/columns/class-base-taxonomy-columns.php"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/source-eigthshift--libs-blue?style=for-the-badge&logo=php&labelColor=2a2a2a",alt:"docs-source"}))),(0,a.kt)("p",null,"Taxonomy Column class is located in ",(0,a.kt)("inlineCode",{parentName:"p"},"Eightshift Libs"),". To extend it use ",(0,a.kt)("inlineCode",{parentName:"p"},"Eightshift_Libs\\Columns\\Base_Taxonomy_Columns")," class."),(0,a.kt)("h2",{id:"example"},"Example:"),(0,a.kt)("p",null,"To create custom taxonomy column:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"make a new class ",(0,a.kt)("inlineCode",{parentName:"li"},"src/columns/class-example-taxonomy-column.php"),"."),(0,a.kt)("li",{parentName:"ol"},"implement all the methods provided in the example."),(0,a.kt)("li",{parentName:"ol"},"register the class inside the ",(0,a.kt)("inlineCode",{parentName:"li"},"class-main.php")," file."),(0,a.kt)("li",{parentName:"ol"},"dump autoload.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"<?php\n/**\n * Example_Taxonomy_Column class file\n *\n * @since 1.1.0\n * @package Eightshift_Boilerplate\\Columns\n */\n\ndeclare( strict_types=1 );\n\nnamespace Eightshift_Boilerplate\\Columns;\n\n/**\n * Class Example_Taxonomy_Column.\n */\nclass Example_Taxonomy_Column extends Base_Taxonomy_Columns {\n\n  /**\n   * Column name constant name.\n   *\n   * @var string\n   */\n  const COLUMN_NAME = 'example';\n\n  /**\n   * Get the slug of the taxonomy where the additional column should appear.\n   *\n   * @return array The name of the taxonomy.\n   *\n   * @since 2.0.5\n   */\n  protected function get_taxonomy_slug() : array {\n    return [ 'category' ];\n  }\n\n  /**\n   * Add additional taxonomy columns to the columns array.\n   *\n   * @param array $columns The existing column names array with default taxonomy columns (title, author, date etc.).\n   *\n   * @return array         Modified column names array.\n   *\n   * @since 2.0.5\n   */\n  public function add_column_name( array $columns ) : array {\n    $columns[ static::COLUMN_NAME ] = esc_html__( 'Example', 'eightshift-boilerplate' );\n\n    return $columns;\n  }\n\n  /**\n   * Render the taxonomy column content in the custom taxonomy column\n   *\n   * @param  string $string      Blank string.\n   * @param  string $column_name Name of the column.\n   * @param  int    $term_id     Term ID.\n   *\n   * @return string The contetnt to display in the custom column.\n   *\n   * @since 2.0.5\n   */\n  public function render_column_content( string $string, string $column_name, int $term_id ) : string {\n    if ( $column_name === static::COLUMN_NAME ) {\n      echo 'column value';\n    }\n  }\n}\n")))}y.isMDXComponent=!0}}]);