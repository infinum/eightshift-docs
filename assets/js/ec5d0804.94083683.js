"use strict";(self.webpackChunk_eightshift_docs=self.webpackChunk_eightshift_docs||[]).push([[75292],{37755:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>a,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>c,toc:()=>i});var t=s(74848),l=s(28453);const r={id:"columns-user",title:"User"},o=void 0,c={id:"legacy/v4/guides/columns-user",title:"User",description:"docs-source",source:"@site/docs/legacy/v4/guides/columns-user.md",sourceDirName:"legacy/v4/guides",slug:"/legacy/v4/guides/columns-user",permalink:"/docs/legacy/v4/guides/columns-user",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"columns-user",title:"User"},sidebar:"docs",previous:{title:"Taxonomy",permalink:"/docs/legacy/v4/guides/columns-taxonomy"},next:{title:"Login",permalink:"/docs/legacy/v4/guides/login"}},a={},i=[{value:"Example:",id:"example",level:2}];function u(n){const e={a:"a",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,l.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"https://github.com/infinum/eightshift-libs/tree/v2.0.0/src/columns/class-base-user-columns.php",children:(0,t.jsx)(e.img,{src:"https://img.shields.io/badge/source-eigthshift--libs-blue?style=for-the-badge&logo=php&labelColor=2a2a2a",alt:"docs-source"})})}),"\n",(0,t.jsxs)(e.p,{children:["User Column class is located in ",(0,t.jsx)(e.code,{children:"Eightshift Libs"}),". To extend it use ",(0,t.jsx)(e.code,{children:"Eightshift_Libs\\Columns\\Base_User_Columns"})," class."]}),"\n",(0,t.jsx)(e.h2,{id:"example",children:"Example:"}),"\n",(0,t.jsx)(e.p,{children:"To create custom user column:"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["make a new class ",(0,t.jsx)(e.code,{children:"src/columns/class-example-user-column.php"}),"."]}),"\n",(0,t.jsx)(e.li,{children:"implement all the methods provided in the example."}),"\n",(0,t.jsxs)(e.li,{children:["register the class inside the ",(0,t.jsx)(e.code,{children:"class-main.php"})," file."]}),"\n",(0,t.jsx)(e.li,{children:"dump autoload."}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:"<?php\n/**\n * Example_User_Column class file\n *\n * @since 1.1.0\n * @package Eightshift_Boilerplate\\Columns\n */\n\ndeclare( strict_types=1 );\n\nnamespace Eightshift_Boilerplate\\Columns;\n\n/**\n * Class Example_User_Column.\n */\nclass Example_User_Column extends Base_User_Columns {\n\n  /**\n   * Column name constant name.\n   *\n   * @var string\n   */\n  const COLUMN_NAME = 'example';\n\n  /**\n   * Add additional user columns to the columns array.\n   *\n   * @param array $columns The existing column names array with default user columns (title, author, date etc.).\n   *\n   * @return array         Modified column names array.\n   *\n   * @since 2.0.5\n   */\n  public function add_column_name( array $columns ) : array {\n    $columns[ static::COLUMN_NAME ] = esc_html__( 'Example', 'eightshift-boilerplate' );\n\n    return $columns;\n  }\n\n  /**\n   * Render the user column content in the custom user column\n   *\n   * @param string $output      Custom column output. Default empty.\n   * @param string $column_name Column name.\n   * @param int    $user_id     ID of the currently-listed user.\n   *\n   * @return string             Output based on the column name.\n   *\n   * @since 2.0.5\n   */\n  public function render_column_content( string $output, string $column_name, int $user_id ) : string {\n    if ( $column_name === static::COLUMN_NAME ) {\n      echo 'column value';\n    }\n  }\n\n  /**\n   * Make user columns sortable\n   *\n   * @param  array $columns Array of columns.\n   *\n   * @return array          Modified array of columns.\n   *\n   * @since 2.0.5\n   */\n  public function sort_added_columns( array $columns ) : array {\n    $columns[ static::COLUMN_NAME ] = static::COLUMN_NAME;\n\n    return $columns;\n  };\n}\n\n"})})]})}function m(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},28453:(n,e,s)=>{s.d(e,{R:()=>o,x:()=>c});var t=s(96540);const l={},r=t.createContext(l);function o(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:o(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);