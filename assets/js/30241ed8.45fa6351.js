"use strict";(self.webpackChunk_eightshift_docs=self.webpackChunk_eightshift_docs||[]).push([[67778],{57551:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>r});var s=t(74848),o=t(28453);const l={id:"columns-post-type",title:"Post Type"},c=void 0,i={id:"legacy/v4/guides/columns-post-type",title:"Post Type",description:"docs-source",source:"@site/docs/legacy/v4/guides/columns-post-type.md",sourceDirName:"legacy/v4/guides",slug:"/legacy/v4/guides/columns-post-type",permalink:"/docs/legacy/v4/guides/columns-post-type",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"columns-post-type",title:"Post Type"},sidebar:"docs",previous:{title:"Route Example",permalink:"/docs/legacy/v4/guides/rest-route-example"},next:{title:"Taxonomy",permalink:"/docs/legacy/v4/guides/columns-taxonomy"}},a={},r=[{value:"Example:",id:"example",level:2}];function u(e){const n={a:"a",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/infinum/eightshift-libs/tree/v2.0.0/src/columns/class-base-post-type-columns.php",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/badge/source-eigthshift--libs-blue?style=for-the-badge&logo=php&labelColor=2a2a2a",alt:"docs-source"})})}),"\n",(0,s.jsxs)(n.p,{children:["Post Type Column class is located in ",(0,s.jsx)(n.code,{children:"Eightshift Libs"}),". To extend it use ",(0,s.jsx)(n.code,{children:"Eightshift_Libs\\Columns\\Base_Post_Type_Columns"})," class."]}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example:"}),"\n",(0,s.jsx)(n.p,{children:"To create custom column:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["make a new class ",(0,s.jsx)(n.code,{children:"src/columns/class-example-column.php"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"implement all the methods provided in the example."}),"\n",(0,s.jsxs)(n.li,{children:["register the class inside the ",(0,s.jsx)(n.code,{children:"class-main.php"})," file."]}),"\n",(0,s.jsx)(n.li,{children:"dump autoload."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"<?php\n/**\n * Example_Column class file\n *\n * @since 1.1.0\n * @package Eightshift_Boilerplate\\Columns\n */\n\ndeclare( strict_types=1 );\n\nnamespace Eightshift_Boilerplate\\Columns;\n\n/**\n * Class Example_Column.\n */\nclass Example_Column extends Base_Post_Columns {\n\n  /**\n   * Column name constant name.\n   *\n   * @var string\n   */\n  const COLUMN_NAME = 'example';\n\n  /**\n   * Get the slug of the post type where the additional column should appear.\n   *\n   * @return array The name of the post type.\n   */\n  protected function get_post_type_slug() : array {\n    return [ 'post' ];\n  }\n\n  /**\n   * Add additional post columns to the columns array.\n   *\n   * @param array $columns The existing column names array with default post columns (title, author, date etc.).\n   * @return array         Modified column names array.\n   */\n  public function add_column_name( array $columns ) : array {\n    $columns[ static::COLUMN_NAME ] = esc_html__( 'Example', 'eightshift-boilerplate' );\n\n    return $columns;\n  }\n\n  /**\n   * Render the post column content in the custom post column\n   *\n   * @param  string $column_name The name of the column to display.\n   * @param  int    $post_id     The current post ID.\n   * @return void\n   */\n  public function render_column_content( string $column_name, int $post_id ) : void {\n    if ( $column_name === static::COLUMN_NAME ) {\n      echo 'column value';\n    }\n  }\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>i});var s=t(96540);const o={},l=s.createContext(o);function c(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);