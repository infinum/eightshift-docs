"use strict";(self.webpackChunk_eightshift_docs=self.webpackChunk_eightshift_docs||[]).push([[3571],{3905:function(t,e,n){n.d(e,{Zo:function(){return l},kt:function(){return h}});var r=n(67294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var c=r.createContext({}),d=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},l=function(t){var e=d(t.components);return r.createElement(c.Provider,{value:e},t.children)},u="mdxType",f={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},p=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,a=t.originalType,c=t.parentName,l=s(t,["components","mdxType","originalType","parentName"]),u=d(n),p=i,h=u["".concat(c,".").concat(p)]||u[p]||f[p]||a;return n?r.createElement(h,o(o({ref:e},l),{},{components:n})):r.createElement(h,o({ref:e},l))}));function h(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var a=n.length,o=new Array(a);o[0]=p;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=t,s[u]="string"==typeof t?t:i,o[1]=s;for(var d=2;d<a;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},50434:function(t,e,n){n.r(e),n.d(e,{assets:function(){return l},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return u}});var r=n(87462),i=n(63366),a=(n(67294),n(3905)),o=["components"],s={id:"coding-standards",title:"Eightshift Coding Standards"},c=void 0,d={unversionedId:"additional-libraries/coding-standards",id:"additional-libraries/coding-standards",title:"Eightshift Coding Standards",description:"GitHub tag",source:"@site/docs/additional-libraries/coding-standards.md",sourceDirName:"additional-libraries",slug:"/additional-libraries/coding-standards",permalink:"/docs/additional-libraries/coding-standards",draft:!1,tags:[],version:"current",frontMatter:{id:"coding-standards",title:"Eightshift Coding Standards"},sidebar:"docs",previous:{title:"Eightshift Docs",permalink:"/docs/additional-libraries/docs"},next:{title:"Eightshift Storybook",permalink:"/docs/additional-libraries/storybook"}},l={},u=[],f={toc:u},p="wrapper";function h(t){var e=t.components,n=(0,i.Z)(t,o);return(0,a.kt)(p,(0,r.Z)({},f,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/infinum/eightshift-coding-standards"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/github/tag/infinum/eightshift-coding-standards.svg?style=for-the-badge",alt:"GitHub tag"}))),(0,a.kt)("p",null,"This package contains ",(0,a.kt)("a",{parentName:"p",href:"https://handbook.infinum.co/books/wordpress"},"Eightshift Coding Standards for WordPress")," for ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/squizlabs/PHP_CodeSniffer/"},"PHP_CodeSniffer"),". The goal is to have a unified code across the WordPress projects we do at Eightshift and help with the code review."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/infinum/eightshift-coding-standards/wiki"},"Documentation")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/infinum/eightshift-coding-standards"},"Github"))))}h.isMDXComponent=!0}}]);