"use strict";(self.webpackChunk_eightshift_docs=self.webpackChunk_eightshift_docs||[]).push([[74165],{28453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>r});var l=o(96540);const n={},s=l.createContext(n);function i(e){const t=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),l.createElement(s.Provider,{value:t},e.children)}},68967:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"php/filters/blocks/allowed-blocks","title":"Allowed blocks","description":"Allows setting a custom list of the allowed blocks within the form editor. It will override the project settings.","source":"@site/forms/php/filters/blocks/allowed-blocks.md","sourceDirName":"php/filters/blocks","slug":"/php/filters/blocks/allowed-blocks","permalink":"/forms/php/filters/blocks/allowed-blocks","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"allowed-blocks","title":"Allowed blocks"},"sidebar":"forms","previous":{"title":"Additional content","permalink":"/forms/php/filters/block/rating/additional-content"},"next":{"title":"Additional blocks","permalink":"/forms/php/filters/blocks/additional-blocks"}}');var n=o(74848),s=o(28453);const i={id:"allowed-blocks",title:"Allowed blocks"},r=void 0,c={},d=[];function a(e){const t={admonition:"admonition",code:"code",em:"em",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Allows setting a custom list of the allowed blocks within the form editor. It will override the project settings.\nUseful if you want to ensure that a custom block (e.g. from an add-on) is visible in the form editor."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-php",children:"\\add_filter('es_forms_blocks_allowed_blocks', [$this, 'getAllowedBlocks']);\n\n/**\n * Override the allowed blocks list and provide add-on block.\n *\n * @return array<int, string> List of blocks.\n */\npublic function getAllowedBlocks(): array\n{\n\treturn [\n\t\t'<block-namespace>/<block-name>',\n\t];\n}\n"})}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["Blocks should be listed with their ",(0,n.jsx)(t.em,{children:"fully qualified"})," names, e.g. ",(0,n.jsx)(t.code,{children:"eightshift-boilerplate/heading"}),"."]})})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}}}]);