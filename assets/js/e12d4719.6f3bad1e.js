"use strict";(self.webpackChunk_eightshift_docs=self.webpackChunk_eightshift_docs||[]).push([[32046],{28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>c});var t=n(96540);const o={},r=t.createContext(o);function i(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(r.Provider,{value:s},e.children)}},90065:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"legacy/v4/guides/blocks-render-block-view-helper","title":"Render Block View Helper","description":"docs-source","source":"@site/docs/legacy/v4/guides/blocks-render-block-view-helper.md","sourceDirName":"legacy/v4/guides","slug":"/legacy/v4/guides/blocks-render-block-view-helper","permalink":"/docs/legacy/v4/guides/blocks-render-block-view-helper","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"blocks-render-block-view-helper","title":"Render Block View Helper"},"sidebar":"docs","previous":{"title":"Creating Block from Components","permalink":"/docs/legacy/v4/guides/blocks-block-from-components"},"next":{"title":"GetActions Helper","permalink":"/docs/legacy/v4/guides/blocks-get-actions-helper"}}');var o=n(74848),r=n(28453);const i={id:"blocks-render-block-view-helper",title:"Render Block View Helper"},c=void 0,l={},d=[{value:"Usage",id:"usage",level:3}];function a(e){const s={a:"a",code:"code",h3:"h3",img:"img",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.p,{children:(0,o.jsx)(s.a,{href:"https://github.com/infinum/eightshift-libs/tree/v2.0.0/src/blocks/class-blocks.php",children:(0,o.jsx)(s.img,{src:"https://img.shields.io/badge/source-eigthshift--libs-blue?style=for-the-badge&logo=php&labelColor=2a2a2a",alt:"docs-source"})})}),"\n",(0,o.jsx)(s.p,{children:"Locate and return template part with passed attributes for a block."}),"\n",(0,o.jsx)(s.h3,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(s.p,{children:"Inside your block view PHP file you'd write:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-js",children:"$this->render_block_view(\n  '/components/heading/heading.php',\n  [\n    'blockClass' => $attributes['blockClass'] ?? '',\n    'heading'    => $attributes['heading'] ?? [],\n  ]\n);\n"})}),"\n",(0,o.jsxs)(s.p,{children:["In the case you are using libs with dependency injection container, this should be handled by the library and the ",(0,o.jsx)(s.code,{children:"render_block_view"})," method is provided in block view by default."]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}}}]);