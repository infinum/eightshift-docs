"use strict";(self.webpackChunk_eightshift_docs=self.webpackChunk_eightshift_docs||[]).push([[9264],{95382:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var n=i(74848),s=i(28453);const o={id:"rest-field",title:"REST Field"},r=void 0,c={id:"basics/rest-field",title:"REST Field",description:"docs-source",source:"@site/docs/basics/rest-field.md",sourceDirName:"basics",slug:"/basics/rest-field",permalink:"/docs/basics/rest-field",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"rest-field",title:"REST Field"},sidebar:"docs",previous:{title:"REST Intro",permalink:"/docs/basics/rest"},next:{title:"REST Route",permalink:"/docs/basics/rest-route"}},d={},l=[{value:"Test it in action",id:"test-it-in-action",level:2}];function a(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",p:"p",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/infinum/eightshift-libs",children:(0,n.jsx)(t.img,{src:"https://img.shields.io/badge/source-eightshift--libs-blue?style=for-the-badge&logo=php&labelColor=2a2a2a",alt:"docs-source"})})}),"\n",(0,n.jsx)(t.p,{children:"This class is used to update an existing REST API Field or provide a new field to the existing REST API."}),"\n",(0,n.jsx)(t.p,{children:"To create a new class for extending an REST API field, run this command:"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"wp boilerplate create rest-field --prompt"})}),"\n",(0,n.jsxs)(t.p,{children:["The output will ask you to input the correct field name and object type (post, get, etc.). Everything else will be done for you, setting the namespace, package, vendor prefixes, class, and folder name, and you will be set to write your field implementation in the ",(0,n.jsx)(t.code,{children:"fieldCallback"})," method."]}),"\n",(0,n.jsx)(t.h2,{id:"test-it-in-action",children:"Test it in action"}),"\n",(0,n.jsxs)(t.p,{children:["To test it in action, you should check the ",(0,n.jsx)(t.code,{children:"wp-json"})," path in your browser. You can do something like this:"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"domain.ext/wp-json/routeNamespace/routeVersion/routeName"})}),"\n",(0,n.jsx)(t.p,{children:"and find the field name."}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsx)(t.p,{children:"This link will be different based on your project implementation."})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>c});var n=i(96540);const s={},o=n.createContext(s);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);