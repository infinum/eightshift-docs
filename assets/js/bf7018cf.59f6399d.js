"use strict";(self.webpackChunk_eightshift_docs=self.webpackChunk_eightshift_docs||[]).push([[41506],{92531:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>a,toc:()=>i});var n=o(74848),s=o(28453);const l={id:"components-color-palette",title:"Color Palette"},r=void 0,a={id:"legacy/v4/advanced/components-color-palette",title:"Color Palette",description:"docs-source",source:"@site/docs/legacy/v4/advanced/components-color-palette.md",sourceDirName:"legacy/v4/advanced",slug:"/legacy/v4/advanced/components-color-palette",permalink:"/docs/legacy/v4/advanced/components-color-palette",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"components-color-palette",title:"Color Palette"},sidebar:"docs",previous:{title:"Error Logger",permalink:"/docs/legacy/v4/advanced/helpers-error-logger-helpers"},next:{title:"Heading Level",permalink:"/docs/legacy/v4/advanced/components-heading-level"}},c={},i=[{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:3}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/infinum/eightshift-frontend-libs/tree/v2.0.0/components/color-palette-custom/color-palette-custom.js",children:(0,n.jsx)(t.img,{src:"https://img.shields.io/badge/source-eigthshift--frontend--libs-yellow?style=for-the-badge&logo=javascript&labelColor=2a2a2a",alt:"docs-source"})})}),"\n",(0,n.jsxs)(t.p,{children:["This is a custom React component that renders a custom color picker exactly the same as the native block editor component, but on the ",(0,n.jsx)(t.code,{children:"save"})," method in the attributes, we save the color name and not the color hex value."]}),"\n",(0,n.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:'import { ColorPaletteCustom } from \'EightshiftComponentColorPalette\';\n\n{onChangeStyleColor &&\n  <ColorPaletteCustom\n    label={__(\'Heading Color\', \'eightshift-boilerplate\')}\n    colors={[\n      {\n        "name": "scarlet",\n        "color": "#D8262C"\n      },\n      {\n        "name": "guard",\n        "color": "#C00100"\n      },\n    ]}\n    value={styleColor}\n    onChange={onChangeStyleColor}\n  />\n}\n'})}),"\n",(0,n.jsx)(t.h3,{id:"options",children:"Options"}),"\n",(0,n.jsxs)(t.p,{children:["All the options are the same as in the native block editor component that you can see ",(0,n.jsx)(t.a,{href:"https://developer.wordpress.org/block-editor/components/color-palette/",children:"here"}),"."]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>r,x:()=>a});var n=o(96540);const s={},l=n.createContext(s);function r(e){const t=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(l.Provider,{value:t},e.children)}}}]);