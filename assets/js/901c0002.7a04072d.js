"use strict";(self.webpackChunk_eightshift_docs=self.webpackChunk_eightshift_docs||[]).push([[82694],{76192:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var n=t(74848),i=t(28453);const o={id:"blocks-registration",title:"Registration"},r=void 0,c={id:"legacy/v6/basics/blocks-registration",title:"Registration",description:"docs-source",source:"@site/docs/legacy/v6/basics/blocks-registration.md",sourceDirName:"legacy/v6/basics",slug:"/legacy/v6/basics/blocks-registration",permalink:"/docs/legacy/v6/basics/blocks-registration",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"blocks-registration",title:"Registration"},sidebar:"docs",previous:{title:"Faq",permalink:"/docs/legacy/v6/basics/blocks-faq"},next:{title:"Structure",permalink:"/docs/legacy/v6/basics/blocks-structure"}},l={},a=[];function d(e){const s={a:"a",code:"code",img:"img",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://github.com/infinum/eightshift-frontend-libs/tree/5.0.0/blocks/init/src/blocks/",children:(0,n.jsx)(s.img,{src:"https://img.shields.io/badge/source-eightshift--frontend--libs-yellow?style=for-the-badge&logo=javascript&labelColor=2a2a2a",alt:"docs-source"})})}),"\n",(0,n.jsx)(s.p,{children:"Our setup works if you follow our naming convention and strict folder structure for all blocks, components, variations, patterns, and wrapper."}),"\n",(0,n.jsxs)(s.p,{children:["By following our structure, we can find all files using the ",(0,n.jsx)(s.code,{children:"require.context"})," regular expression inside the ",(0,n.jsx)(s.code,{children:"Blocks"})," folder. Alongside some JavaScript magic, we have been able to leave out all those unnecessary steps when creating new blocks like:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"providing style files;"}),"\n",(0,n.jsx)(s.li,{children:"writing register method;"}),"\n",(0,n.jsx)(s.li,{children:"setting PHP method for registering dynamic blocks; and"}),"\n",(0,n.jsx)(s.li,{children:"including files when adding new components."}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["You can check out how this works inside the ",(0,n.jsx)(s.code,{children:"src/Blocks/assets/scripts/application-blocks-editor.js"})," file."]}),"\n",(0,n.jsxs)(s.p,{children:["Please follow our ",(0,n.jsx)(s.a,{href:"blocks-structure",children:"blocks structure folder"})," to see the naming standard and how blocks are set."]})]})}function u(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>c});var n=t(96540);const i={},o=n.createContext(i);function r(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(o.Provider,{value:s},e.children)}}}]);