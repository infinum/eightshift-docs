"use strict";(self.webpackChunk_eightshift_docs=self.webpackChunk_eightshift_docs||[]).push([[14346],{93515:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var o=n(74848),s=n(28453);const i={id:"rest-route",title:"REST Route"},r=void 0,c={id:"basics/rest-route",title:"REST Route",description:"docs-source",source:"@site/docs/basics/rest-route.md",sourceDirName:"basics",slug:"/basics/rest-route",permalink:"/docs/basics/rest-route",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"rest-route",title:"REST Route"},sidebar:"docs",previous:{title:"REST Field",permalink:"/docs/basics/rest-field"},next:{title:"General",permalink:"/docs/basics/frontend"}},a={},d=[{value:"Test it in action",id:"test-it-in-action",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",p:"p",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://github.com/infinum/eightshift-libs",children:(0,o.jsx)(t.img,{src:"https://img.shields.io/badge/source-eightshift--libs-blue?style=for-the-badge&logo=php&labelColor=2a2a2a",alt:"docs-source"})})}),"\n",(0,o.jsx)(t.p,{children:"This class is used to create a new REST API route."}),"\n",(0,o.jsx)(t.p,{children:"To create a new class for the REST API route, run this command:"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"wp boilerplate create rest-route"})}),"\n",(0,o.jsxs)(t.p,{children:["The output will ask you to input the correct endpoint slug and method (",(0,o.jsx)(t.code,{children:"POST"}),", ",(0,o.jsx)(t.code,{children:"GET"}),", etc.). Everything else will be done for you, setting the namespace, package, vendor prefixes, class, and folder name, and you will be set to write your field implementation in the ",(0,o.jsx)(t.code,{children:"routeCallback"})," method."]}),"\n",(0,o.jsx)(t.h2,{id:"test-it-in-action",children:"Test it in action"}),"\n",(0,o.jsxs)(t.p,{children:["To test it in action, you should check the ",(0,o.jsx)(t.code,{children:"wp-json"})," path in your browser. You can do that with something like this:"]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"domain.ext/wp-json/routeNamespace/routeVersion/routeName"})}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsx)(t.p,{children:"This link will be different based on your project implementation."})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var o=n(96540);const s={},i=o.createContext(s);function r(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);