"use strict";(self.webpackChunk_eightshift_docs=self.webpackChunk_eightshift_docs||[]).push([[75149],{6783:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>a});var i=s(74848),o=s(28453);const t={id:"wp-cli",title:"WP-CLI",sidebar_label:"WP-CLI"},l=void 0,r={id:"legacy/v5/basics/wp-cli",title:"WP-CLI",description:"docs-source",source:"@site/docs/legacy/v5/basics/wp-cli.md",sourceDirName:"legacy/v5/basics",slug:"/legacy/v5/basics/wp-cli",permalink:"/docs/legacy/v5/basics/wp-cli",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"wp-cli",title:"WP-CLI",sidebar_label:"WP-CLI"},sidebar:"docs",previous:{title:"Basics",permalink:"/docs/legacy/v5/basics/basics-intro"},next:{title:"Backend",permalink:"/docs/legacy/v5/basics/backend"}},c={},a=[{value:"How it works",id:"how-it-works",level:2},{value:"Options and commands",id:"options-and-commands",level:2},{value:"Commands",id:"commands",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/infinum/eightshift-libs/tree/3.0.0/",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/badge/source-eigthshift--libs-blue?style=for-the-badge&logo=php&labelColor=2a2a2a",alt:"docs-source"})})}),"\n",(0,i.jsx)(n.p,{children:"We have already mentioned the WP-CLI feature of Eightshift Boilerplate. Now, let's dig a little deeper into this awesome feature. We took our time to set up a bunch of WP-CLI commands that will help you set everything up and use all our features without worrying about correct names, files, and organization."}),"\n",(0,i.jsx)(n.h2,{id:"how-it-works",children:"How it works"}),"\n",(0,i.jsx)(n.p,{children:"In your project's entry point, you have something like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:"/**\n * Run all WP-CLI commands.\n */\nif (class_exists(Cli::class)) {\n  (new Cli())->load('boilerplate');\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This code loads WP-CLI class from Eightshift Libs responsible for registering all of our custom commands. Keep in mind that, since WP-CLI code loads inside the theme/plugin, that same theme/plugin ",(0,i.jsx)(n.strong,{children:"must"})," be activated in the WordPress admin."]}),"\n",(0,i.jsx)(n.p,{children:"To run the WP-CLI command and see what you can use, run this command in your terminal:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"wp boilerplate --help"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["By default, your project's WP-CLI commands run under the parent name ",(0,i.jsx)(n.code,{children:"boilerplate"})," defined in the upper code."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"You can change that by simply replacing the string inside the load method like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:"/**\n * Run all WP-CLI commands.\n */\nif (class_exists(Cli::class)) {\n  (new Cli())->load('superCoolTheme');\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Now, your project's WP-CLI loads like this:"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"wp superCoolTheme --help"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"This is especially handy when you have multiple Eightshift Boilerplate powered themes or plugins installed. In that case, you should change the WP-CLI parent name on each of the projects."}),"\n",(0,i.jsx)(n.h2,{id:"options-and-commands",children:"Options and commands"}),"\n",(0,i.jsxs)(n.p,{children:["When you type each command in the terminal, it will do some action. Some commands will ask you for additional parameters. You can see them if you run the ",(0,i.jsx)(n.code,{children:"command name"})," and ",(0,i.jsx)(n.code,{children:"--help"})," like this:"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"wp boilerplate create_config --help"})}),"\n",(0,i.jsxs)(n.p,{children:["Under the ",(0,i.jsx)(n.code,{children:"OPTIONS"}),", you can see all required and optional parameters you can pass to the command to fine-tune your output."]}),"\n",(0,i.jsx)(n.h3,{id:"commands",children:"Commands"}),"\n",(0,i.jsx)(n.p,{children:"We have defined a few command prefixes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"create"})," - services classes that will be copied to your project."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"init"})," - additional functions, methods and helpers that will be copied to your project."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"run"})," - commands used to run an action directly from Eightshift Libs. They will not copy anything to your project."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"setup"})," - commands that runs multiple already defined commands from the list."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"use"})," - commands used for blocks and block-related stuff. They will copy various files and folders from the blocks folder to your project."]}),"\n"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Make WP-CLI your best friend, and your coding life will be much more comfortable, trust me."})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["We will explain the classes that we think are necessary and should be described in more detail. For the rest of the classes, you can find the descriptions by running ",(0,i.jsx)(n.code,{children:"--help"})," after each command."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>r});var i=s(96540);const o={},t=i.createContext(o);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);