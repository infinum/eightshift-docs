"use strict";(self.webpackChunk_eightshift_docs=self.webpackChunk_eightshift_docs||[]).push([[2860],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return k}});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,m=r(e,["components","mdxType","originalType","parentName"]),u=p(n),c=i,k=u["".concat(s,".").concat(c)]||u[c]||d[c]||l;return n?a.createElement(k,o(o({ref:t},m),{},{components:n})):a.createElement(k,o({ref:t},m))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,o=new Array(l);o[0]=c;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[u]="string"==typeof e?e:i,o[1]=r;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},12799:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return s},default:function(){return k},frontMatter:function(){return r},metadata:function(){return p},toc:function(){return u}});var a=n(87462),i=n(63366),l=(n(67294),n(3905)),o=["components"],r={id:"8-9",title:"Version 8 to 9"},s=void 0,p={unversionedId:"migrations/8-9",id:"migrations/8-9",title:"Version 8 to 9",description:"This migration guide contains migration instructions for:",source:"@site/docs/migrations/8-9.md",sourceDirName:"migrations",slug:"/migrations/8-9",permalink:"/docs/migrations/8-9",draft:!1,tags:[],version:"current",frontMatter:{id:"8-9",title:"Version 8 to 9"},sidebar:"docs",previous:{title:"Intro",permalink:"/docs/tutorials/intro"},next:{title:"Version 7 to 8",permalink:"/docs/migrations/7-8"}},m={},u=[{value:"Required changes",id:"required-changes",level:3},{value:"Components updates and replacements",id:"components-updates-and-replacements",level:2},{value:"Common between components",id:"common-between-components",level:3},{value:"<code>CollapsableComponentUseToggle</code>",id:"collapsablecomponentusetoggle",level:3},{value:"<code>ComponentUseToggle</code>",id:"componentusetoggle",level:3},{value:"<code>ColorPaletteCustom</code>",id:"colorpalettecustom",level:3},{value:"<code>ColorPickerComponent</code>",id:"colorpickercomponent",level:3},{value:"<code>Responsive</code>",id:"responsive",level:3},{value:"<code>CompactResponsive</code>",id:"compactresponsive",level:3},{value:"<code>CustomSelect</code>",id:"customselect",level:3},{value:"<code>LinkEditComponent</code>",id:"linkeditcomponent",level:3},{value:"<code>SimpleVerticalSingleSelect</code>",id:"simpleverticalsingleselect",level:3},{value:"<code>OptionPicker</code>",id:"optionpicker",level:3},{value:"<code>LinkToolbarButton</code>",id:"linktoolbarbutton",level:3},{value:"<code>InlineNotification</code>",id:"inlinenotification",level:3},{value:"<code>SpacingSlider</code>",id:"spacingslider",level:3},{value:"<code>WidthOffsetRangeSlider</code>",id:"widthoffsetrangeslider",level:3},{value:"<code>VisibilityToggleResponsive</code>",id:"visibilitytoggleresponsive",level:3},{value:"<code>SimpleHorizontalSingleSelect</code>",id:"simplehorizontalsingleselect",level:3},{value:"<code>AlignmentToolbar</code>",id:"alignmenttoolbar",level:3},{value:"<code>HeadingLevel</code>",id:"headinglevel",level:3},{value:"<code>CustomSlider</code>",id:"customslider",level:3},{value:"<code>SimpleRepeater</code> / <code>SimpleRepeaterItem</code>",id:"simplerepeater--simplerepeateritem",level:3}],d={toc:u},c="wrapper";function k(e){var t=e.components,r=(0,i.Z)(e,o);return(0,l.kt)(c,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This migration guide contains migration instructions for:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/infinum/eightshift-boilerplate/releases/tag/9.0.0"},"eightshift/boilerplate")," - ",(0,l.kt)("strong",{parentName:"li"},"8+ --\x3e 9.0.0")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/infinum/eightshift-frontend-libs/releases/tag/8.0.0"},"eightshift/frontend-libs")," - ",(0,l.kt)("strong",{parentName:"li"},"7+ --\x3e 8.0.0")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/infinum/eightshift-libs/releases/tag/6.4.0"},"eightshift/libs"))),(0,l.kt)("h3",{id:"required-changes"},"Required changes"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Migration time: ~45min to a couple of hours, depending on project size and components used.")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Update ",(0,l.kt)("inlineCode",{parentName:"li"},"composer")," packages and check if Eightshift Libs are on version 6.4 (or higher)"),(0,l.kt)("li",{parentName:"ol"},"Update ",(0,l.kt)("inlineCode",{parentName:"li"},"@eightshift/frontend-libs")," in your ",(0,l.kt)("inlineCode",{parentName:"li"},"package.json")," file to the latest version:",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-json"},'"@eightshift/frontend-libs": "^8.0.0",\n'))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Important:")," Delete your lockfile (",(0,l.kt)("inlineCode",{parentName:"li"},"package.lock"),") and your ",(0,l.kt)("inlineCode",{parentName:"li"},"node_modules")," folder, then run ",(0,l.kt)("inlineCode",{parentName:"li"},"npm install")),(0,l.kt)("li",{parentName:"ol"},"Rename updated components, update changed properties and replace deprecated components (see chapter below)"),(0,l.kt)("li",{parentName:"ol"},"Do a ",(0,l.kt)("inlineCode",{parentName:"li"},"npm start"),", check that you have no build errors visible"),(0,l.kt)("li",{parentName:"ol"},"Smoke test your blocks - to verify everything was migrated properly, go through all the blocks and check if everything looks good visually and that everything is functional")),(0,l.kt)("h2",{id:"components-updates-and-replacements"},"Components updates and replacements"),(0,l.kt)("p",null,"Below you will find some of the more common components that will need to be modified, and also some possible caveats."),(0,l.kt)("p",null,"Your code editor should mark the components that need replacement with a strikethrough over the component name:"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Component deprecation notice in Visual Studio Code",src:n(46645).Z,width:"556",height:"226"})),(0,l.kt)("h3",{id:"common-between-components"},"Common between components"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"if you have a label with an ",(0,l.kt)("inlineCode",{parentName:"li"},"IconLabel")," inside, you can migrate it to separate ",(0,l.kt)("inlineCode",{parentName:"li"},"icon")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"label")," props:",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"label={<IconLabel icon={icons.color} label={__('Background', 'domain')} />}\n")),"becomes",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"icon={icons.color}\nlabel={__('Background', 'domain')}\n"))),(0,l.kt)("li",{parentName:"ul"},"if the component is the last in the list of options, you can add ",(0,l.kt)("inlineCode",{parentName:"li"},"noBottomSpacing")," to make everything look a bit nicer"),(0,l.kt)("li",{parentName:"ul"},"if you want to visually group two similar components, e.g. toggles, you can bring them vertically closer together with ",(0,l.kt)("inlineCode",{parentName:"li"},"reducedBottomSpacing"))),(0,l.kt)("h3",{id:"collapsablecomponentusetoggle"},(0,l.kt)("inlineCode",{parentName:"h3"},"CollapsableComponentUseToggle")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"rename the component and imports to ",(0,l.kt)("inlineCode",{parentName:"li"},"UseToggle")),(0,l.kt)("li",{parentName:"ul"},"change ",(0,l.kt)("inlineCode",{parentName:"li"},"showUseToggle")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"noUseToggle")," and flip its logic"),(0,l.kt)("li",{parentName:"ul"},"change ",(0,l.kt)("inlineCode",{parentName:"li"},"showLabel")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"noLabel")," and flip its logic"),(0,l.kt)("li",{parentName:"ul"},"change ",(0,l.kt)("inlineCode",{parentName:"li"},"showExpanderButton")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"noExpandButton")," and flip its logic"),(0,l.kt)("li",{parentName:"ul"},"consider adding ",(0,l.kt)("inlineCode",{parentName:"li"},"noExpandButton")," to your attributes and add it to all your blocks, so the options render nicely")),(0,l.kt)("h3",{id:"componentusetoggle"},(0,l.kt)("inlineCode",{parentName:"h3"},"ComponentUseToggle")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"replace the component with ",(0,l.kt)("inlineCode",{parentName:"li"},"UseToggle")),(0,l.kt)("li",{parentName:"ul"},"move all of the options inside the useToggle"),(0,l.kt)("li",{parentName:"ul"},"change ",(0,l.kt)("inlineCode",{parentName:"li"},"showUseToggle")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"noUseToggle")," and flip its logic"),(0,l.kt)("li",{parentName:"ul"},"change ",(0,l.kt)("inlineCode",{parentName:"li"},"showLabel")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"noLabel")," and flip its logic")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Before"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"<ComponentUseToggle\n    label={label}\n    checked={accordionUse}\n    onChange={(value) => setAttributes({ [getAttrKey('accordionUse', attributes, manifest)]: value })}\n    showUseToggle={showAccordionUse}\n    showLabel={showLabel}\n/>\n\n{accordionUse &&\n    // Other options.\n}\n")),(0,l.kt)("p",null,"After:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"<UseToggle\n    label={label}\n    checked={accordionUse}\n    onChange={(value) => setAttributes({ [getAttrKey('accordionUse', attributes, manifest)]: value })}\n    noUseToggle={!showAccordionUse} // Inverted logic!\n    noLabel={!showLabel} // Inverted logic!\n    noBottomSpacing // If the component is the only one in the options panel\n>\n    // Other options.\n</UseToggle>\n")),(0,l.kt)("h3",{id:"colorpalettecustom"},(0,l.kt)("inlineCode",{parentName:"h3"},"ColorPaletteCustom")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"rename the component and imports to ",(0,l.kt)("inlineCode",{parentName:"li"},"ColorPalette")),(0,l.kt)("li",{parentName:"ul"},"remove the ",(0,l.kt)("inlineCode",{parentName:"li"},"inline")," prop if you have it added"),(0,l.kt)("li",{parentName:"ul"},"change the ",(0,l.kt)("inlineCode",{parentName:"li"},"layout")," prop to a string instead of a ",(0,l.kt)("inlineCode",{parentName:"li"},"ColorPaletteCustomLayout")," object (hint: use autocomplete to see all the possible values)"),(0,l.kt)("li",{parentName:"ul"},"if you have it set, change ",(0,l.kt)("inlineCode",{parentName:"li"},"groupShades={false}")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"noShadeGrouping"))),(0,l.kt)("h3",{id:"colorpickercomponent"},(0,l.kt)("inlineCode",{parentName:"h3"},"ColorPickerComponent")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"rename the component and imports to ",(0,l.kt)("inlineCode",{parentName:"li"},"ColorPicker")),(0,l.kt)("li",{parentName:"ul"},"change the ",(0,l.kt)("inlineCode",{parentName:"li"},"type")," prop to a string instead of a ",(0,l.kt)("inlineCode",{parentName:"li"},"ColorPickerType")," object (hint: use autocomplete to see all the possible values)"),(0,l.kt)("li",{parentName:"ul"},"if you have it set, change ",(0,l.kt)("inlineCode",{parentName:"li"},"groupShades={false}")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"noShadeGrouping")),(0,l.kt)("li",{parentName:"ul"},"if you have it set, replace ",(0,l.kt)("inlineCode",{parentName:"li"},"includeWpBottomSpacing={false}")," with ",(0,l.kt)("inlineCode",{parentName:"li"},"noBottomSpacing"))),(0,l.kt)("h3",{id:"responsive"},(0,l.kt)("inlineCode",{parentName:"h3"},"Responsive")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"check and remove all breakpoint labels you had set manually, they're now automatically rendered by the component")),(0,l.kt)("h3",{id:"compactresponsive"},(0,l.kt)("inlineCode",{parentName:"h3"},"CompactResponsive")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"rename the component and imports to ",(0,l.kt)("inlineCode",{parentName:"li"},"Responsive")),(0,l.kt)("li",{parentName:"ul"},"check and remove all breakpoint labels you had set manually, they're now automatically rendered by the component")),(0,l.kt)("h3",{id:"customselect"},(0,l.kt)("inlineCode",{parentName:"h3"},"CustomSelect")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"this component has been split up into 4 more specific components",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"if you had a CustomSelect ",(0,l.kt)("strong",{parentName:"li"},"without")," ",(0,l.kt)("inlineCode",{parentName:"li"},"multiple")," and with ",(0,l.kt)("inlineCode",{parentName:"li"},"options"),", replace it with ",(0,l.kt)("inlineCode",{parentName:"li"},"Select")),(0,l.kt)("li",{parentName:"ul"},"if you had a CustomSelect ",(0,l.kt)("strong",{parentName:"li"},"without")," ",(0,l.kt)("inlineCode",{parentName:"li"},"multiple")," and with ",(0,l.kt)("inlineCode",{parentName:"li"},"loadOptions"),", replace it with ",(0,l.kt)("inlineCode",{parentName:"li"},"MultiSelect")),(0,l.kt)("li",{parentName:"ul"},"if you had a CustomSelect with ",(0,l.kt)("inlineCode",{parentName:"li"},"multiple")," and with ",(0,l.kt)("inlineCode",{parentName:"li"},"options"),", replace it with ",(0,l.kt)("inlineCode",{parentName:"li"},"MultiSelect")),(0,l.kt)("li",{parentName:"ul"},"if you had a CustomSelect with ",(0,l.kt)("inlineCode",{parentName:"li"},"multiple")," and with ",(0,l.kt)("inlineCode",{parentName:"li"},"loadOptions"),", replace it with ",(0,l.kt)("inlineCode",{parentName:"li"},"AsyncMultiSelect")))),(0,l.kt)("li",{parentName:"ul"},"replace ",(0,l.kt)("inlineCode",{parentName:"li"},"isClearable")," with ",(0,l.kt)("inlineCode",{parentName:"li"},"clearable")," if you had it set to ",(0,l.kt)("inlineCode",{parentName:"li"},"true")),(0,l.kt)("li",{parentName:"ul"},"replace ",(0,l.kt)("inlineCode",{parentName:"li"},"isSearchable")," with ",(0,l.kt)("inlineCode",{parentName:"li"},"noSearch")," if you had it set to ",(0,l.kt)("inlineCode",{parentName:"li"},"false"),", otherwise remove it"),(0,l.kt)("li",{parentName:"ul"},"remove ",(0,l.kt)("inlineCode",{parentName:"li"},"reFetchOnSearch"),", as it was removed"),(0,l.kt)("li",{parentName:"ul"},"remove ",(0,l.kt)("inlineCode",{parentName:"li"},"multiple")," (make sure you add the proper kind of Select!)"),(0,l.kt)("li",{parentName:"ul"},"if you had an async select (with ",(0,l.kt)("inlineCode",{parentName:"li"},"loadOptions"),"), and had ",(0,l.kt)("inlineCode",{parentName:"li"},"simpleValue")," set, you will need to find a slightly different solution, as this is not supported anymore")),(0,l.kt)("h3",{id:"linkeditcomponent"},(0,l.kt)("inlineCode",{parentName:"h3"},"LinkEditComponent")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u26a0\ufe0f props have changed here, it'll leave URL pickers broken if you forget to change them!")),(0,l.kt)("li",{parentName:"ul"},"replace ",(0,l.kt)("inlineCode",{parentName:"li"},"setAttributes"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"urlAttrName"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"isNewTabAttrName")," (if set) with an ",(0,l.kt)("inlineCode",{parentName:"li"},"onChange")," callback (see example below)"),(0,l.kt)("li",{parentName:"ul"},"remove ",(0,l.kt)("inlineCode",{parentName:"li"},"title")," with ",(0,l.kt)("inlineCode",{parentName:"li"},"label")," if you want to keep it customized (you can also just remove it)"),(0,l.kt)("li",{parentName:"ul"},"replace ",(0,l.kt)("inlineCode",{parentName:"li"},"showNewTabOption")," with ",(0,l.kt)("inlineCode",{parentName:"li"},"hideOpensInNewTab")," and invert its logic"),(0,l.kt)("li",{parentName:"ul"},"you can now hide the anchor notice with ",(0,l.kt)("inlineCode",{parentName:"li"},"hideAnchorNotice"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Before"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"url={buttonUrl}\n<LinkEditComponent\n    url={buttonUrl}\n    opensInNewTab={buttonIsNewTab}\n    setAttributes={setAttributes}\n    title={variableLabel}\n    urlAttrName={getAttrKey('buttonUrl', attributes, manifest)}\n    isNewTabAttrName={getAttrKey('buttonIsNewTab', attributes, manifest)}\n    showNewTabOption={showButtonIsNewTab}\n/>\n")),(0,l.kt)("p",null,"After"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"<LinkEditComponent\n    url={buttonUrl}\n    opensInNewTab={buttonIsNewTab}\n    hideOpensInNewTab={!showButtonIsNewTab} // Inverted logic!\n    onChange={({ url, newTab, isAnchor }) => setAttributes({\n        [getAttrKey('buttonUrl', attributes, manifest)]: url,\n        [getAttrKey('buttonIsNewTab', attributes, manifest)]: newTab,\n        [getAttrKey('buttonIsAnchor', attributes, manifest)]: isAnchor ?? false, // Optional, can replace a manual toggle (detects setting anchor links automatically).\n    })}\n/>\n")),(0,l.kt)("h3",{id:"simpleverticalsingleselect"},(0,l.kt)("inlineCode",{parentName:"h3"},"SimpleVerticalSingleSelect")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"replace the component with ",(0,l.kt)("inlineCode",{parentName:"li"},"OptionSelector")),(0,l.kt)("li",{parentName:"ul"},"replace the ",(0,l.kt)("inlineCode",{parentName:"li"},"options")," prop (one that returns an object) with ",(0,l.kt)("inlineCode",{parentName:"li"},"value"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"onChange")," callback and available ",(0,l.kt)("inlineCode",{parentName:"li"},"options")," (array)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Make sure your options have at least a ",(0,l.kt)("inlineCode",{parentName:"p"},"label")," and a ",(0,l.kt)("inlineCode",{parentName:"p"},"value"),"!"),(0,l.kt)("p",null,"Before"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"const sizeOptions = getOption('buttonSize', attributes, manifest).map(({ label, value, icon: iconName }) => {\n        return {\n            onClick: () => setAttributes({\n                [getAttrKey('buttonSize', attributes, manifest)]: value,\n                [getAttrKey('buttonIsLink', attributes, manifest)]: false\n            }),\n            label: label,\n            isActive: buttonSize === value,\n            icon: icons[iconName],\n        };\n    });\n\n// ...\n\n<SimpleVerticalSingleSelect\n    label={<IconLabel icon={icons.size} label={__('Size', 'domain')} />}\n    options={sizeOptions}\n/>\n")),(0,l.kt)("p",null,"After"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"<OptionSelector\n    icon={icons.size}\n    label={__('Size', 'domain')}\n    options={getOption('buttonSize', attributes, manifest)}\n    value={buttonSize}\n    onChange={(value) => setAttributes({\n        [getAttrKey('buttonSize', attributes, manifest)]: value,\n        [getAttrKey('buttonIsLink', attributes, manifest)]: false\n    })}\n/>\n")),(0,l.kt)("h3",{id:"optionpicker"},(0,l.kt)("inlineCode",{parentName:"h3"},"OptionPicker")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"replace with ",(0,l.kt)("inlineCode",{parentName:"li"},"OptionSelector")),(0,l.kt)("li",{parentName:"ul"},"add ",(0,l.kt)("inlineCode",{parentName:"li"},"noBottomSpacing")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"border='none'")),(0,l.kt)("li",{parentName:"ul"},"add ",(0,l.kt)("inlineCode",{parentName:"li"},"additionalContainerClass='es-p-1.25'")," to align it properly with other controls"),(0,l.kt)("li",{parentName:"ul"},"remove the ",(0,l.kt)("inlineCode",{parentName:"li"},"label"))),(0,l.kt)("p",null,"Consider relocating your toolbar option to the options sidebar."),(0,l.kt)("h3",{id:"linktoolbarbutton"},(0,l.kt)("inlineCode",{parentName:"h3"},"LinkToolbarButton")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"replace with ",(0,l.kt)("inlineCode",{parentName:"li"},"LinkEditComponent"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"follow the guide for that component for other prop replacements"))),(0,l.kt)("li",{parentName:"ul"},"you might need to place it in a")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Before"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"<LinkToolbarButton\n    urlAttrName={getAttrKey('chevronUrl', attributes, manifest)}\n    isNewTabAttrName={getAttrKey('chevronIsNewTab', attributes, manifest)}\n    url={chevronUrl}\n    opensInNewTab={chevronIsNewTab}\n    setAttributes={setAttributes}\n    title={__(ucfirst(componentName), 'domain')}\n/>\n")),(0,l.kt)("p",null,"After"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"import { ToolbarButton, ToolbarItem, } from '@wordpress/components';\nimport { PopoverWithTrigger } from '@eightshift/frontend-libs/scripts';\n\n// ...\n\n<ToolbarItem as='div'>\n    <PopoverWithTrigger\n        position='top right'\n        contentClass='es-w-80 es-p-4'\n        trigger={\n            ({ ref, setIsOpen, isOpen }) => (\n                <ToolbarButton\n                    ref={ref}\n                    onClick={() => setIsOpen(!isOpen)}\n                    isPressed={chevronUrl?.length > 0}\n                    icon={icons.link}\n                />\n            )\n        }\n    >\n        <LinkEditComponent\n            url={chevronUrl}\n            opensInNewTab={chevronIsNewTab}\n            onChange={({ url, newTab }) => setAttributes({\n                [getAttrKey('chevronUrl', attributes, manifest)]: url,\n                [getAttrKey('chevronIsNewTab', attributes, manifest)]: newTab,\n            })}\n            hideOpensInNewTab\n            noBottomSpacing\n        />\n    </PopoverWithTrigger>\n</ToolbarItem>\n")),(0,l.kt)("h3",{id:"inlinenotification"},(0,l.kt)("inlineCode",{parentName:"h3"},"InlineNotification")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"rename the component and imports to ",(0,l.kt)("inlineCode",{parentName:"li"},"Notification")),(0,l.kt)("li",{parentName:"ul"},"change the ",(0,l.kt)("inlineCode",{parentName:"li"},"type")," prop to a string instead of a ",(0,l.kt)("inlineCode",{parentName:"li"},"InlineNotificationType")," object (hint: use autocomplete to see all the possible values)"),(0,l.kt)("li",{parentName:"ul"},"replace ",(0,l.kt)("inlineCode",{parentName:"li"},"removeBottomFieldSpacing")," with ",(0,l.kt)("inlineCode",{parentName:"li"},"noBottomSpacing"),", if set"),(0,l.kt)("li",{parentName:"ul"},"remove ",(0,l.kt)("inlineCode",{parentName:"li"},"showContrastOutline")," as it's not supported anymore")),(0,l.kt)("h3",{id:"spacingslider"},(0,l.kt)("inlineCode",{parentName:"h3"},"SpacingSlider")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"replace with ",(0,l.kt)("inlineCode",{parentName:"li"},"ResponsiveSlider")," with the config generator"),(0,l.kt)("li",{parentName:"ul"},"remove deprecated props"),(0,l.kt)("li",{parentName:"ul"},"if you had ",(0,l.kt)("inlineCode",{parentName:"li"},"compensateForRemBase10"),", add",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"    modifyInput={(v) => v * 10}\n    modifyOutput={(v) => v / 10}\n")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Before"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"<SpacingSlider\n    icon={icons.order}\n    label={__('Order', 'domain')}\n    attributeName='columnOrder'\n    attributes={attributes}\n    setAttributes={setAttributes}\n    manifest={manifest}\n    markSteps={2}\n    hasInputField={false}\n    hasValueDisplay\n    valueDisplayFormat={(v) => !isNaN(v) && v > 0 ? v : '-'}\n    showDisableButton\n    disableWithUndefined\n    isNumeric\n/>\n")),(0,l.kt)("p",null,"After"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"<ResponsiveSlider\n    {...generateResponsiveSliderConfig({\n        attributeName: 'columnOrder',\n        attributes: attributes,\n        manifest: manifest,\n        setAttributes: setAttributes,\n    })}\n    icon={icons.order}\n    label={__('Order', 'domain')}\n/>\n")),(0,l.kt)("h3",{id:"widthoffsetrangeslider"},(0,l.kt)("inlineCode",{parentName:"h3"},"WidthOffsetRangeSlider")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"wrap some of the deprecated options with a config generator")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Before"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"<WidthOffsetRangeSlider\n    offsetAttributeName='columnOffset'\n    widthAttributeName='columnWidth'\n    manifest={manifest}\n    attributes={attributes}\n    setAttributes={setAttributes}\n    showFullWidthToggle={false}\n    includeGutters\n    showOffsetAutoToggle\n/>\n")),(0,l.kt)("p",null,"After"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"<WidthOffsetRangeSlider\n    {...generateWidthOffsetRangeSliderConfig({\n        offsetAttributeName: 'columnOffset',\n        widthAttributeName: 'columnWidth',\n        attributes: attributes,\n        manifest: manifest,\n        setAttributes: (attr) => {\n            // This is only required if you have \"Auto\" offset as an option, and the attributes are numeric, otherwise just pass setAttributes as-is.\n            const newAttr = {};\n\n            Object.entries(attr).forEach(([key, value]) => {\n                if (value !== 'auto' && typeof value !== 'undefined') {\n                    newAttr[key] = parseInt(value);\n                    return;\n                }\n\n                newAttr[key] = value;\n            });\n\n            setAttributes(newAttr);\n        },\n        numOfColumns: 14,\n        showOffsetAutoToggle: true,\n        numericValues: true,\n        showFullWidth: false,\n    })}\n/>\n")),(0,l.kt)("h3",{id:"visibilitytoggleresponsive"},(0,l.kt)("inlineCode",{parentName:"h3"},"VisibilityToggleResponsive")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"replace with ",(0,l.kt)("inlineCode",{parentName:"li"},"ResponsiveToggleButton")," and use the config generator")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Before"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"<VisibilityToggleResponsive\n    attributeName='columnHide'\n    label={__('Visibility', 'redesign')}\n    manifest={manifest}\n    attributes={attributes}\n    setAttributes={setAttributes}\n/>\n")),(0,l.kt)("p",null,"After"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"<ResponsiveToggleButton\n    {...generateResponsiveToggleButtonConfig({\n        attributeName: 'columnHide',\n        manifest: manifest,\n        attributes: attributes,\n        setAttributes: setAttributes,\n    })}\n\n    label={__('Hide', 'domain')}\n    icon={icons.hide}\n/>\n")),(0,l.kt)("h3",{id:"simplehorizontalsingleselect"},(0,l.kt)("inlineCode",{parentName:"h3"},"SimpleHorizontalSingleSelect")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"rename the component and imports to ",(0,l.kt)("inlineCode",{parentName:"li"},"OptionSelector")),(0,l.kt)("li",{parentName:"ul"},"remove ",(0,l.kt)("inlineCode",{parentName:"li"},"border='offset'")," if set, that's now the default"),(0,l.kt)("li",{parentName:"ul"},"replace ",(0,l.kt)("inlineCode",{parentName:"li"},"includeWpBottomSpacing={false}")," with ",(0,l.kt)("inlineCode",{parentName:"li"},"noBottomSpacing"))),(0,l.kt)("h3",{id:"alignmenttoolbar"},(0,l.kt)("inlineCode",{parentName:"h3"},"AlignmentToolbar")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"replace with ",(0,l.kt)("inlineCode",{parentName:"li"},"OptionSelector")),(0,l.kt)("li",{parentName:"ul"},"add ",(0,l.kt)("inlineCode",{parentName:"li"},"optionLabels")," to transform just values into ",(0,l.kt)("inlineCode",{parentName:"li"},"{label, value}")," (or ",(0,l.kt)("inlineCode",{parentName:"li"},"{label, value, icon}"),") entries"),(0,l.kt)("li",{parentName:"ul"},"add ",(0,l.kt)("inlineCode",{parentName:"li"},"noBottomSpacing"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"additionalContainerClass='es-p-1.25'"),", and ",(0,l.kt)("inlineCode",{parentName:"li"},"border='none'")," so it fits the toolbar better"),(0,l.kt)("li",{parentName:"ul"},"remove ",(0,l.kt)("inlineCode",{parentName:"li"},"label")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"type"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Before"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"<AlignmentToolbar\n    value={cardAlign}\n    options={getOption('cardAlign', attributes, manifest)}\n    label={sprintf(__('%s content align', 'domain'), manifestTitle)}\n    onChange={(value) => setAttributes({ [getAttrKey('cardAlign', attributes, manifest)]: value })}\n    type={AlignmentToolbarType.HORIZONTAL}\n/>\n")),(0,l.kt)("p",null,"After"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"<OptionSelector\n    value={cardAlign}\n    options={getOption('cardAlign', attributes, manifest)}\n    onChange={(value) => setAttributes({ [getAttrKey('cardAlign', attributes, manifest)]: value })}\n    optionLabels={getOption('cardAlign', attributes, manifest).map((v) => ({ label: ucfirst(v), icon: icons[`textAlign${ucfirst(v)}`] }))}\n    additionalContainerClass='es-p-1.25'\n    noBottomSpacing\n    border='none'\n    iconOnly\n/>\n")),(0,l.kt)("h3",{id:"headinglevel"},(0,l.kt)("inlineCode",{parentName:"h3"},"HeadingLevel")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"replace with ",(0,l.kt)("inlineCode",{parentName:"li"},"OptionSelector")),(0,l.kt)("li",{parentName:"ul"},"change ",(0,l.kt)("inlineCode",{parentName:"li"},"selectedLevel")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"value")),(0,l.kt)("li",{parentName:"ul"},"add ",(0,l.kt)("inlineCode",{parentName:"li"},"noBottomSpacing"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"additionalContainerClass='es-p-1.25'"),", and ",(0,l.kt)("inlineCode",{parentName:"li"},"border='none'")," so it fits the toolbar better"),(0,l.kt)("li",{parentName:"ul"},"add ",(0,l.kt)("inlineCode",{parentName:"li"},"options")," with all the available heading level options (see ",(0,l.kt)("em",{parentName:"li"},"After")," in the example below)"),(0,l.kt)("li",{parentName:"ul"},"if you want the options to look a bit better, you can add ",(0,l.kt)("inlineCode",{parentName:"li"},"additionalButtonClass"),", just like in the ",(0,l.kt)("em",{parentName:"li"},"After")," example below")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Before"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"<HeadingLevel\n    selectedLevel={typographyLevel}\n    onChange={(value) => setAttributes({ [getAttrKey('typographyLevel', attributes, manifest)]: value })}\n/>\n")),(0,l.kt)("p",null,"After"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"<OptionSelector\n    value={typographyLevel}\n    onChange={(value) => setAttributes({ [getAttrKey('typographyLevel', attributes, manifest)]: value })}\n    additionalContainerClass='es-p-1.25'\n    noBottomSpacing\n    border='none'\n    options={[\n        { label: 'H1', tooltip: __('Heading 1', 'domain'), value: 1 },\n        { label: 'H2', tooltip: __('Heading 2', 'domain'), value: 2 },\n        { label: 'H3', tooltip: __('Heading 3', 'domain'), value: 3 },\n        { label: 'H4', tooltip: __('Heading 4', 'domain'), value: 4 },\n        { label: 'H5', tooltip: __('Heading 5', 'domain'), value: 5 },\n        { label: 'H6', tooltip: __('Heading 6', 'domain'), value: 6 },\n    ]}\n    additionalButtonClass='es-button-square-36 es-text-4 es-font-weight-300'\n/>\n")),(0,l.kt)("h3",{id:"customslider"},(0,l.kt)("inlineCode",{parentName:"h3"},"CustomSlider")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"rename the component and imports to ",(0,l.kt)("inlineCode",{parentName:"li"},"OptionSelector")),(0,l.kt)("li",{parentName:"ul"},"you might want to remove ",(0,l.kt)("inlineCode",{parentName:"li"},"marks")," if not very specific, as an auto-generator for marks is now included")),(0,l.kt)("h3",{id:"simplerepeater--simplerepeateritem"},(0,l.kt)("inlineCode",{parentName:"h3"},"SimpleRepeater")," / ",(0,l.kt)("inlineCode",{parentName:"h3"},"SimpleRepeaterItem")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"rename the component and imports to ",(0,l.kt)("inlineCode",{parentName:"li"},"Repeater")," / ",(0,l.kt)("inlineCode",{parentName:"li"},"RepeaterItem"))))}k.isMDXComponent=!0},46645:function(e,t,n){t.Z=n.p+"assets/images/component-deprecation-notice-2d5aa7a20bdb52d9769388acb9e5a725.webp"}}]);