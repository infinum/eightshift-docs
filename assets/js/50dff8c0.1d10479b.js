"use strict";(self.webpackChunk_eightshift_docs=self.webpackChunk_eightshift_docs||[]).push([[94417],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var i=n(96540);const a={},d=i.createContext(a);function r(e){const t=i.useContext(d);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(d.Provider,{value:t},e.children)}},84727:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"migrations/14-15","title":"Version 14 to 15","description":"This migration guide contains migration instructions for:","source":"@site/docs/migrations/14-15.md","sourceDirName":"migrations","slug":"/migrations/14-15","permalink":"/docs/migrations/14-15","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"14-15","title":"Version 14 to 15"},"sidebar":"docs","previous":{"title":"Intro","permalink":"/docs/tutorials/intro"},"next":{"title":"Version 13 to 14","permalink":"/docs/migrations/13-14"}}');var a=n(74848),d=n(28453);const r={id:"14-15",title:"Version 14 to 15"},s=void 0,o={},l=[{value:"Eightshift Libs",id:"eightshift-libs",level:2},{value:"<code>media.php</code> file:",id:"mediaphp-file",level:3},{value:"Removed helpers",id:"removed-helpers",level:3},{value:"Regenerate media",id:"regenerate-media",level:3}];function h(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"This migration guide contains migration instructions for:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.a,{href:"https://github.com/infinum/eightshift-libs/releases/tag/11.0.0",children:"eightshift/libs"})," - ",(0,a.jsx)(t.strong,{children:"10+ --\x3e 11.0.0"})]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"eightshift-libs",children:"Eightshift Libs"}),"\n",(0,a.jsxs)(t.h3,{id:"mediaphp-file",children:[(0,a.jsx)(t.code,{children:"media.php"})," file:"]}),"\n",(0,a.jsx)(t.p,{children:"before"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",children:"/**\n * Register all the hooks\n *\n * @return void\n */\npublic function register(): void\n{\n\t...\n\n\t// WebP.\n\tif (\\extension_loaded('gd')) {\n\t\t\\add_filter('wp_generate_attachment_metadata', [$this, 'generateWebPMedia'], 10, 2);\n\t\t\\add_filter('wp_update_attachment_metadata', [$this, 'generateWebPMedia'], 10, 2);\n\t\t\\add_action('delete_attachment', [$this, 'deleteWebPMedia']);\n\t}\n}\n"})}),"\n",(0,a.jsx)(t.p,{children:"after"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",children:"/**\n * Register all the hooks\n *\n * @return void\n */\npublic function register(): void\n{\n\t\\add_action('after_setup_theme', [$this, 'addThemeSupport'], 20);\n\t\\add_filter('upload_mimes', [$this, 'enableMimeTypes']);\n\t\\add_filter('wp_prepare_attachment_for_js', [$this, 'enableSvgMediaLibraryPreview'], 10, 2);\n\t\\add_filter('wp_handle_upload_prefilter', [$this, 'validateSvgOnUpload']);\n\t\\add_filter('wp_check_filetype_and_ext', [$this, 'enableSvgUpload'], 10, 3);\n\t\\add_filter('wp_check_filetype_and_ext', [$this, 'enableJsonUpload'], 10, 3);\n\n\t// WebP.\n\tif (\\extension_loaded('gd')) {\n\t\t\\add_filter('wp_handle_upload', [$this, 'convertMediaToWebP']);\n\t}\n}\n"})}),"\n",(0,a.jsx)(t.h3,{id:"removed-helpers",children:"Removed helpers"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"There is no need to check if WebP is used anymore, as all allowed media are converted to WebP by default."}),"\n"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",children:"Helpers::isWebPMediaUsed();\nHelpers::getWebPMedia();\n"})}),"\n",(0,a.jsx)(t.h3,{id:"regenerate-media",children:"Regenerate media"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:"If you already have generated WebP media with the old method:"}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["You need to run the following command to regenerate the media: ",(0,a.jsx)(t.code,{children:"wp boilerplate run regenerate-media --only_update_db='true'"}),". This will update the database with the new WebP media paths."]}),"\n",(0,a.jsxs)(t.ol,{start:"2",children:["\n",(0,a.jsx)(t.li,{children:"If you haven't generated WebP media with the old method:"}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["You need to run the following command to generate the media: ",(0,a.jsx)(t.code,{children:"wp boilerplate run regenerate-media"}),". This will generate the WebP media for all allowed media and update the database with the new WebP media paths."]}),"\n",(0,a.jsxs)(t.ol,{start:"3",children:["\n",(0,a.jsx)(t.li,{children:"If you are using an S3 bucket for media:"}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["If you are using an S3 bucket for media, and you have WebP media generated with the old method, just follow ",(0,a.jsx)(t.code,{children:"step 1"}),". If you haven't generated WebP media with the old method, you must have all media in the WP uploads folder and run ",(0,a.jsx)(t.code,{children:"step 2"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["::: note\nIf you are using Eightshift Utils plugins use its own command (",(0,a.jsx)(t.code,{children:"wp eightshift-utils run regenerate-media"}),") to regenerate the media.\n:::"]})]})}function c(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}}}]);