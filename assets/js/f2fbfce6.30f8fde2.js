"use strict";(self.webpackChunk_eightshift_docs=self.webpackChunk_eightshift_docs||[]).push([[54883],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var f=r.createContext({}),p=function(e){var t=r.useContext(f),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(f.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,f=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=i,d=c["".concat(f,".").concat(m)]||c[m]||u[m]||o;return n?r.createElement(d,a(a({ref:t},s),{},{components:n})):r.createElement(d,a({ref:t},s))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var f in t)hasOwnProperty.call(t,f)&&(l[f]=t[f]);l.originalType=e,l[c]="string"==typeof e?e:i,a[1]=l;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},18513:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return f},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var r=n(87462),i=n(63366),o=(n(67294),n(3905)),a=["components"],l={id:"fail-mimetype-validation-when-file-not-on-fs",title:"Fail mimetype validation"},f=void 0,p={unversionedId:"php/filters/validation/fail-mimetype-validation-when-file-not-on-fs",id:"php/filters/validation/fail-mimetype-validation-when-file-not-on-fs",title:"Fail mimetype validation",description:"By default, MIME types are validated by the filesystem. However, if the file is not present on the filesystem for any reason, this will fall back to the POST-provided MIME types.",source:"@site/forms/php/filters/validation/fail-mimetype-validation-when-file-not-on-fs.md",sourceDirName:"php/filters/validation",slug:"/php/filters/validation/fail-mimetype-validation-when-file-not-on-fs",permalink:"/forms/php/filters/validation/fail-mimetype-validation-when-file-not-on-fs",draft:!1,tags:[],version:"current",frontMatter:{id:"fail-mimetype-validation-when-file-not-on-fs",title:"Fail mimetype validation"},sidebar:"forms",previous:{title:"Countries",permalink:"/forms/php/filters/geolocation/countries"},next:{title:"ActiveCampaign",permalink:"/forms/php/filters/integrations/active-campaign"}},s={},c=[],u={toc:c},m="wrapper";function d(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"By default, MIME types are validated by the filesystem. However, if the file is not present on the filesystem for any reason, this will fall back to the POST-provided MIME types."),(0,o.kt)("p",null,"Using this filter, you can force Forms to fail every file upload where it can't validate the MIME type from the filesystem."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"add_filter('es_forms_validation_force_mimetype_from_fs', function(): bool {\n    return true;\n})\n")))}d.isMDXComponent=!0}}]);