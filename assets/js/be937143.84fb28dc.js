"use strict";(self.webpackChunk_eightshift_docs=self.webpackChunk_eightshift_docs||[]).push([[57515],{50975:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var r=n(74848),a=n(28453);const i={id:"manual-map",title:"Manual map"},s=void 0,o={id:"php/filters/enrichment/manual-map",title:"Manual map",description:"Enrichment is a feature that allows storing URL parameters or cookie values in the browser localStorage, allowing their use during form submissions, in case they are not available after the user returns to the page.",source:"@site/forms/php/filters/enrichment/manual-map.md",sourceDirName:"php/filters/enrichment",slug:"/php/filters/enrichment/manual-map",permalink:"/forms/php/filters/enrichment/manual-map",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"manual-map",title:"Manual map"},sidebar:"forms",previous:{title:"Pre-Post Params",permalink:"/forms/php/filters/entries/pre-post-params"},next:{title:"Force mimetype from FS",permalink:"/forms/php/filters/validation/force-mimetype-from-fs"}},m={},l=[];function c(e){const t={code:"code",em:"em",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.em,{children:"Enrichment"})," is a feature that allows storing URL parameters or cookie values in the browser ",(0,r.jsx)(t.code,{children:"localStorage"}),", allowing their use during form submissions, in case they are not available after the user returns to the page."]}),"\n",(0,r.jsxs)(t.p,{children:["This filter allows to configure the ",(0,r.jsx)(t.em,{children:"Enrichment"})," functionality. You should have a list of URL parameter/cookie names, and their corresponding form field names ready. Return an associative array with the keys being URL parameter/cookie names, and the value an array of one or more form field names. The parameter mapping will happen during form submission."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-php",children:"\\add_filter('es_forms_enrichment_manual_map', [$this, 'getEnrichmentManualMap']);\n\n/**\n * Manual map enrichment array.\n *\n * This filter provides you with the ability to manually map enrichment array combined with settings data.\n *\n * @return array<string, array<int, string>>\n */\npublic function getEnrichmentManualMap(): array\n{\n\treturn [\n\t\t'__IB_LT_utm_medium' => ['utm_medium_lt'],\n\t\t'__IB_LT_utm_source' => ['utm_source_lt'],\n\t];\n}\n"})}),"\n",(0,r.jsxs)(t.p,{children:["In this example, if while submitting the form you have a URL parameter or a cookie name ",(0,r.jsx)(t.code,{children:"__IB_LT_utm_medium"}),", its value will be entered into the ",(0,r.jsx)(t.code,{children:"utm_medium_lt"})," form field."]}),"\n",(0,r.jsxs)(t.p,{children:["The data is stored in ",(0,r.jsx)(t.code,{children:"localStorage"})," for the duration set in Settings."]})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>o});var r=n(96540);const a={},i=r.createContext(a);function s(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);