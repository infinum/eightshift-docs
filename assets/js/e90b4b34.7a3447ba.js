"use strict";(self.webpackChunk_eightshift_docs=self.webpackChunk_eightshift_docs||[]).push([[54379],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return h}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(r),d=a,h=u["".concat(c,".").concat(d)]||u[d]||f[d]||i;return r?n.createElement(h,o(o({ref:t},p),{},{components:r})):n.createElement(h,o({ref:t},p))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},64155:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var n=r(87462),a=r(63366),i=(r(67294),r(3905)),o=["components"],l={id:"rest",title:"Rest Intro",sidebar_label:"Rest Intro"},c=void 0,s={unversionedId:"legacy/v5/basics/rest",id:"legacy/v5/basics/rest",title:"Rest Intro",description:"docs-source",source:"@site/docs/legacy/v5/basics/rest.md",sourceDirName:"legacy/v5/basics",slug:"/legacy/v5/basics/rest",permalink:"/docs/legacy/v5/basics/rest",draft:!1,tags:[],version:"current",frontMatter:{id:"rest",title:"Rest Intro",sidebar_label:"Rest Intro"},sidebar:"docs",previous:{title:"Manifest",permalink:"/docs/legacy/v5/basics/manifest"},next:{title:"Rest Field",permalink:"/docs/legacy/v5/basics/rest-field"}},p={},u=[{value:"CallableFieldInterface.php",id:"callablefieldinterfacephp",level:2},{value:"CallableRouteInterface.php",id:"callablerouteinterfacephp",level:2},{value:"RouteSecurityInterface.php",id:"routesecurityinterfacephp",level:2},{value:"RouteInterface.php",id:"routeinterfacephp",level:2},{value:"AbstractField.php",id:"abstractfieldphp",level:2},{value:"AbstractRoute.php",id:"abstractroutephp",level:2}],f={toc:u},d="wrapper";function h(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)(d,(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/infinum/eightshift-libs/tree/3.0.0/"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/source-eigthshift--libs-blue?style=for-the-badge&logo=php&labelColor=2a2a2a",alt:"docs-source"}))),(0,i.kt)("p",null,"Depending on the type of projects you are working on, you might need to create a new REST API route or add a new API field to the existing route."),(0,i.kt)("p",null,"We have prepared four interfaces and two abstract classes for you."),(0,i.kt)("p",null,"In general, you will use only what you need from the provided options."),(0,i.kt)("h2",{id:"callablefieldinterfacephp"},"CallableFieldInterface.php"),(0,i.kt)("p",null,"The interface used in Rest API Field for providing callback method."),(0,i.kt)("h2",{id:"callablerouteinterfacephp"},"CallableRouteInterface.php"),(0,i.kt)("p",null,"The interface used in Rest API Route for providing callback method."),(0,i.kt)("h2",{id:"routesecurityinterfacephp"},"RouteSecurityInterface.php"),(0,i.kt)("p",null,"The interface used in Rest API Route for providing authentication methods."),(0,i.kt)("h2",{id:"routeinterfacephp"},"RouteInterface.php"),(0,i.kt)("p",null,"The interface used in Rest API Route for providing general options for your route like variables for ",(0,i.kt)("inlineCode",{parentName:"p"},"READABLE"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"CREATABLE"),", etc..."),(0,i.kt)("h2",{id:"abstractfieldphp"},"AbstractField.php"),(0,i.kt)("p",null,"Abstract class used in Rest API Field for updating existing fields or providing a new field to the existing Rest API."),(0,i.kt)("p",null,"Please check the implementation details in ",(0,i.kt)("a",{parentName:"p",href:"rest-field"},"this example"),"."),(0,i.kt)("h2",{id:"abstractroutephp"},"AbstractRoute.php"),(0,i.kt)("p",null,"Abstract class used in Rest API Route for adding a new Rest API route."),(0,i.kt)("p",null,"Please check the implementation details in ",(0,i.kt)("a",{parentName:"p",href:"rest-route"},"this example"),"."))}h.isMDXComponent=!0}}]);