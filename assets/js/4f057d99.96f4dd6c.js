"use strict";(self.webpackChunk_eightshift_docs=self.webpackChunk_eightshift_docs||[]).push([[42709],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return n?a.createElement(f,i(i({ref:t},c),{},{components:n})):a.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},62423:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var a=n(87462),r=n(63366),o=(n(67294),n(3905)),i=["components"],s={id:"namespaces",title:"Namespaces"},l=void 0,p={unversionedId:"legacy/v8/basics/namespaces",id:"legacy/v8/basics/namespaces",title:"Namespaces",description:"docs-source",source:"@site/docs/legacy/v8/basics/namespaces.md",sourceDirName:"legacy/v8/basics",slug:"/legacy/v8/basics/namespaces",permalink:"/docs/legacy/v8/basics/namespaces",draft:!1,tags:[],version:"current",frontMatter:{id:"namespaces",title:"Namespaces"},sidebar:"docs",previous:{title:"General",permalink:"/docs/legacy/v8/basics/backend"},next:{title:"Extending Classes",permalink:"/docs/legacy/v8/basics/extending-classes"}},c={},u=[{value:"Important note",id:"important-note",level:3}],m={toc:u},d="wrapper";function f(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)(d,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/infinum/eightshift-libs"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/source-eightshift--libs-blue?style=for-the-badge&logo=php&labelColor=2a2a2a",alt:"docs-source"}))),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"The PHP codebase of this project lives in ",(0,o.kt)("inlineCode",{parentName:"p"},"EightshiftLibs")," namespace.")),(0,o.kt)("p",null,"Because WordPress lives in a global namespace, we had to provide the way for your project to be unique. That is why we implemented ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/infinum/imposter-plugin"},(0,o.kt)("strong",{parentName:"a"},"Imposter"))," in ",(0,o.kt)("inlineCode",{parentName:"p"},"composer.json"),". Imposter adds a namespace prefix to all the packages inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"vendor")," folder that use namespacing."),(0,o.kt)("p",null,"You can change the vendor prefix in your ",(0,o.kt)("inlineCode",{parentName:"p"},"composer.json")," file. If you do this, make sure you delete the ",(0,o.kt)("inlineCode",{parentName:"p"},"vendor")," folder and re-run ",(0,o.kt)("inlineCode",{parentName:"p"},"composer install"),"."),(0,o.kt)("p",null,"Using the default setup, your project will have the namespace you defined in the setup process."),(0,o.kt)("p",null,"However, let's say you change your ",(0,o.kt)("inlineCode",{parentName:"p"},"composer.json")," file to contain this snippet:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'"autoload": {\n  "psr-4": {\n    "CustomProject\\\\": "src/"\n  }\n},\n"extra": {\n  "imposter": {\n    "namespace": "EightshiftBoilerplateVendor"\n  }\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Your current namespace is: ",(0,o.kt)("inlineCode",{parentName:"li"},"CustomProject"),"."),(0,o.kt)("li",{parentName:"ul"},"Namespace for Eightshift Libs becomes: ",(0,o.kt)("inlineCode",{parentName:"li"},"EightshiftBoilerplateVendor\\EightshiftLibs"),"."),(0,o.kt)("li",{parentName:"ul"},"Every package you additionally install will follow the same convention: ",(0,o.kt)("inlineCode",{parentName:"li"},"EightshiftBoilerplateVendor\\SomePackageNamespace"),".")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"To sum it up"),": you don't need to change the default vendor prefix if you only run one theme or one plugin with Eightshift Development Kit. If you have multiple Eightshift Development Kit-powered themes or plugins installed, please change the vendor prefix on each of the projects."),(0,o.kt)("h3",{id:"important-note"},"Important note"),(0,o.kt)("p",null,"If you are installing additional composer packages, make sure that they don't have any inline namespace usage. All referenced classes should be imported with ",(0,o.kt)("inlineCode",{parentName:"p"},"use")," statements, which must be defined at the top of files."),(0,o.kt)("p",null,"The Imposter plugin is not able to replace inline namespaces, which will cause issues with classname resolution and result in a fatal error getting thrown."),(0,o.kt)("p",null,"To fix these issues, either create a PR on the package and fix this for everyone, or exclude this package from imposter script. Keep in mind that can have some unexpected side effects that we can't predict."))}f.isMDXComponent=!0}}]);